"""
Django settings for bookstore project.

Generated by 'django-admin startproject' using Django 2.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
#import pdb; pdb.set_trace()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ja)tp-g-qfy51rpc4zip35^qf9+i5kj#26-vg3!+knv3&1wxpt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
]

LOCAL_APPS = [
    'app',
    'accounts',
    'catalog'
]


THIRD_PARTY_APP = [
    'oauth2_provider',
    'corsheaders',
    'rest_framework',
    'tinymce',
    'social_django',
    'drf_multiple_model',
    'django_filters',
    'stripe'
]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APP + LOCAL_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
]

### REST FRAMEWORK SETTING ###
REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'bookstore.core.renderers.ApiRenderer',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
    ),
    'EXCEPTION_HANDLER': 'bookstore.core.exceptions.api_exception_handler',
}
APPLICATION_NAME = 'book_store'

# In days.
USER_TOKEN_EXPIRES = 30
ROOT_URLCONF = 'bookstore.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'bookstore.core.context_processors.latest_books'
            ],
        },
    },
]

WSGI_APPLICATION = 'bookstore.wsgi.application'
AUTH_USER_MODEL = 'accounts.User'
# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

GET_CATEGORY_API_PAGE_SIZE = 10

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

HTTP_API_ERROR = 111

FORGOT_PASSWORD_EXPIRE = 120

EMAIL_VERIFY_EXPIRE = 30

VALIDATE_OTP_EXPIRE = 120

VALIDATE_PASSWORD_MIN = 6

VALIDATE_PASSWORD_MAX = 15

ACCOUNT_VERIFY_TOKEN_EXPIRE_IN = {
    'minutes': 1200
}
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,"public","static"),
    ]
# STATIC_ROOT = os.path.join(BASE_DIR, 'public','static')

STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'public','media')

MEDIA_URL = '/media/'

SESSION_COOKIE_NAME = 'bookstoreworks'

GET_CATEGORY_API_PAGE_SIZE = 2
AUTHENTICATION_BACKENDS = (
    'social_core.backends.facebook.FacebookOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)
LOGIN_URL = 'login'
LOGOUT_URL = 'logout'
LOGIN_REDIRECT_URL = 'catalog:home'

STRIPE_PUBLISHABLE_KEY = 'pk_test_SeGqlza7Sg1F8TkL62T0ErpT'

STRIPE_SECRET_KEY = 'sk_test_I0TegtysWpXw1c6l3sP4NAun'

SITE_ID = 1